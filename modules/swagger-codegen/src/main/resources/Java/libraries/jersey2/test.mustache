package {{package}};


import {{invokerPackage}}.ApiException;
import {{invokerPackage}}.ApiClient;
import {{invokerPackage}}.Configuration;
import {{invokerPackage}}.Pair;

import javax.ws.rs.core.GenericType;

{{#imports}}import {{import}};
{{/imports}}

{{^fullJavaUtil}}
    import java.util.ArrayList;
    import java.util.HashMap;
    import java.util.List;
    import java.util.Map;
{{/fullJavaUtil}}

import org.junit.Test;
import java.util.Date;

import static org.junit.Assert.*;

{{>generatedAnnotation}}

public class UserApiTest {
@Test
public void createUser200() throws Exception {
SignUpDTO body = new SignUpDTO();
String curTime = String.valueOf(new Date().getTime());
String test = curTime + "test";
body.setUsername(test);
body.setEmail(test + "@test.com");
body.setPassword(curTime);

new UserApi().createUser(body);
}

@Test
public void createUserExist() throws Exception {
SignUpDTO body = new SignUpDTO();
body.setUsername("exist");
body.setEmail("exist@exist.com");
body.setPassword("exist@exist");

new UserApi().createUser(body);
}


{{#operations}}
public class {{classname}}Test {

    private {{classname}} api;
    @Before
    public void setUp() throws Exception {
        api =  new {{classname}}();
    }

    @After
    public void tearDown() throws Exception {

    }

    {{#operation}}
        /**
        * {{summary}}
        * {{notes}}{{#allParams}}
            * @param {{paramName}} {{description}}{{#required}} (required){{/required}}{{^required}} (optional{{#defaultValue}}, default to {{{.}}}{{/defaultValue}}){{/required}}{{/allParams}}{{#returnType}}
            * @return {{{returnType}}}{{/returnType}}
        * @throws ApiException if fails to make API call
        */
        @Test public void {{operationId}} () {
            {{#allParams}}
                {{{dataType}}} {{{paramName}}} = {{{example}}}; // {{{dataType}}} | {{{description}}}
            {{/allParams}}
            api.{{operationId}}({{#allParams}} {{{paramName}}}{{#hasMore}}, {{/hasMore}}{{/allParams}});
        }
    {{/operation}}
}
{{/operations}}